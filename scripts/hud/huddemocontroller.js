"use strict";
/// <reference path="../csgo.d.ts" />
function EatClick() {
    return true;
}
const cp = $.GetContextPanel();
const slider = $("#Slider");
const speeds = $("#SpeedControls").Children().slice(1);
let bActive = cp.BHasClass("active");
$.RegisterForUnhandledEvent("DemoToggleUI", () => {
    bActive = !bActive;
    cp.SetHasClass("active", bActive);
    cp.SetInputCaptureEnabled(bActive);
});
let lastState = null;
let bRoundsMarked = false;
function FrameUpdate() {
    if (!cp.visible) {
        $.Schedule(1, FrameUpdate);
        return;
    }
    $.Schedule(0, FrameUpdate);
    const state = cp.GetDemoControllerState();
    if (state == null) {
        lastState = null;
        return;
    }
    if (lastState == null || lastState.sFileName !== state.sFileName) {
        bRoundsMarked = false;
        let sFileName = state.sFileName.replaceAll("\\", "/");
        let nSlashIndex = sFileName.lastIndexOf("/");
        if (nSlashIndex !== -1)
            sFileName = sFileName.substring(nSlashIndex + 1);
        cp.SetDialogVariable("total_time", TicksToTimeText(state.nTotalTicks, state.nSecondsPerTick));
    }
    lastState = state;
    const pMarkers = $("#RoundMarkers");
    if (pMarkers.actuallayoutwidth > 0 && !bRoundsMarked) {
        bRoundsMarked = true;
        pMarkers.RemoveAndDeleteChildren();
        const pThumb = $("#SliderThumb");
        const nThumbWidth = pThumb.actuallayoutwidth / pThumb.actualuiscale_x;
        const nMarkersWidth = (pMarkers.actuallayoutwidth / pThumb.actualuiscale_x) - nThumbWidth;
        for (let i = 0; i < state.RoundStarts.length; i++) {
            const nStartTick = state.RoundStarts[i].nTick;
            const nEndTick = i < state.RoundStarts.length - 1 ? state.RoundStarts[i + 1].nTick - 1 : state.nTotalTicks;
            let nLeft = nStartTick / state.nTotalTicks * nMarkersWidth + nThumbWidth / 2;
            let nWidth = (nEndTick - nStartTick) / state.nTotalTicks * nMarkersWidth;
            if (i === 0) {
                nWidth += nLeft;
                nLeft = 0;
            }
            else if (i === state.RoundStarts.length - 1) {
                nWidth += nThumbWidth / 2;
            }
            const pMarker = $.CreatePanel("Panel", pMarkers, "", { class: i % 2 === 0 ? "even" : "odd" });
            pMarker.style.marginLeft = nLeft + "px";
            pMarker.style.width = nWidth + "px";
        }
    }
    cp.SetHasClass("paused", state.bIsPaused);
    slider.min = 0;
    slider.max = state.nTotalTicks;
    if (!slider.mousedown) {
        slider.value = state.nTick;
        cp.SetDialogVariable("current_time", TicksToTimeText(state.nTick, state.nSecondsPerTick));
        cp.SetDialogVariableInt("round_number", TicksToRound(state.nTick, state.RoundStarts));
    }
    speeds[0].SetHasClass("selected", state.fTimeScale === .25);
    speeds[1].SetHasClass("selected", state.fTimeScale === .5);
    speeds[2].SetHasClass("selected", state.fTimeScale === 1);
    speeds[3].SetHasClass("selected", state.fTimeScale === 2);
    speeds[4].SetHasClass("selected", state.fTimeScale === 4);
}
$.Schedule(0, FrameUpdate);
$.RegisterEventHandler("SliderReleased", slider, (_, fValue) => {
    if (lastState == null)
        return true;
    cp.SetDialogVariable("current_time", TicksToTimeText(fValue, lastState.nSecondsPerTick));
    cp.SetDialogVariableInt("round_number", TicksToRound(fValue, lastState.RoundStarts));
    cp.GotoTick(Math.floor(fValue));
    return true;
});
$.RegisterEventHandler("SliderValueChanged", slider, (_, fValue) => {
    if (lastState == null)
        return true;
    cp.SetDialogVariable("current_time", TicksToTimeText(fValue, lastState.nSecondsPerTick));
    cp.SetDialogVariableInt("round_number", TicksToRound(fValue, lastState.RoundStarts));
    return true;
});
function OnPlayClicked() {
    cp.SetPaused(!cp.BHasClass("paused"));
    return true;
}
function OnStepTime(fStep) {
    if (lastState) {
        cp.GotoTick(lastState.nTick + (fStep / lastState.nSecondsPerTick));
    }
    return true;
}
function OnStepRound(nStep) {
    if (lastState && lastState.RoundStarts.length > 0) {
        const nRoundIndex = lastState.RoundStarts.findIndex(r => r.nTick > lastState.nTick) - 1;
        let nNewRound = nRoundIndex + nStep;
        if (nNewRound < 0)
            nNewRound = 0;
        else if (nNewRound > lastState.RoundStarts.length - 1)
            nNewRound = lastState.RoundStarts.length - 1;
        cp.GotoTick(lastState.RoundStarts[nNewRound].nTick);
    }
    return true;
}
function OnTimeScale(fTimeScale) {
    cp.SetTimeScale(fTimeScale);
    return true;
}
function TicksToTimeText(nTick, nSecondsPerTick) {
    const nTime = Math.floor(nSecondsPerTick * nTick);
    const nSeconds = nTime % 60;
    const nMinutes = Math.floor(nTime / 60);
    const sSeconds = nSeconds < 10 ? "0" + nSeconds : nSeconds.toString();
    return `${nMinutes}:${sSeconds}`;
}
function TicksToRound(nTick, rounds) {
    if (rounds.length === 0 || rounds[0].nTick > nTick)
        return 0;
    for (let i = 0; i < rounds.length; i++) {
        if (nTick < rounds[i].nTick) {
            return i - 1;
        }
    }
    return rounds.length;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHVkZGVtb2NvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb250ZW50L2NzZ28vcGFub3JhbWEvc2NyaXB0cy9odWQvaHVkZGVtb2NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHFDQUFxQztBQUdyQyxTQUFTLFFBQVE7SUFFYixPQUFPLElBQUksQ0FBQztBQUNoQixDQUFDO0FBb0NELE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQTZCLENBQUM7QUFDMUQsTUFBTSxNQUFNLEdBQUcsQ0FBQyxDQUFFLFNBQVMsQ0FBYyxDQUFDO0FBQzFDLE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBRSxnQkFBZ0IsQ0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLEtBQUssQ0FBRSxDQUFDLENBQUUsQ0FBQztBQUc1RCxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFFLFFBQVEsQ0FBRSxDQUFDO0FBQ3ZDLENBQUMsQ0FBQyx5QkFBeUIsQ0FBRSxjQUFjLEVBQUUsR0FBRyxFQUFFO0lBRTlDLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQztJQUNuQixFQUFFLENBQUMsV0FBVyxDQUFFLFFBQVEsRUFBRSxPQUFPLENBQUUsQ0FBQztJQUNwQyxFQUFFLENBQUMsc0JBQXNCLENBQUUsT0FBTyxDQUFFLENBQUM7QUFDekMsQ0FBQyxDQUFFLENBQUM7QUFFSixJQUFJLFNBQVMsR0FBd0MsSUFBSSxDQUFDO0FBQzFELElBQUksYUFBYSxHQUFHLEtBQUssQ0FBQztBQUMxQixTQUFTLFdBQVc7SUFFaEIsSUFBSyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQ2hCO1FBQ0ksQ0FBQyxDQUFDLFFBQVEsQ0FBRSxDQUFDLEVBQUUsV0FBVyxDQUFFLENBQUM7UUFDN0IsT0FBTztLQUNWO0lBRUQsQ0FBQyxDQUFDLFFBQVEsQ0FBRSxDQUFDLEVBQUUsV0FBVyxDQUFFLENBQUM7SUFFN0IsTUFBTSxL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